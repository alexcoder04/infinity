#!/usr/bin/env python3
#        _                        _            ___  _  _   
#   __ _| | _____  _____ ___   __| | ___ _ __ / _ \| || |  
#  / _` | |/ _ \ \/ / __/ _ \ / _` |/ _ \ '__| | | | || |_ 
# | (_| | |  __/>  < (_| (_) | (_| |  __/ |  | |_| |__   _|
#  \__,_|_|\___/_/\_\___\___/ \__,_|\___|_|   \___/   |_|  
# 
# Copyright (c) 2021-2022 alexcoder04 <https://github.com/alexcoder04>
# 
# checking the current bitcoin price

import requests
import argh
import os

def getenv(key, default=""):
    try:
        return os.environ[key]
    except KeyError:
        return default

API_URL = "https://min-api.cryptocompare.com/data/price?fsym=%s&tsyms=USD"
CACHE_FILE = f"{getenv('TMPDIR', '/tmp')}/crypto.price"
ICONS = {
            "BTC": " ",
            "XMR": " "
        }

def get_price(coin):
    resp = requests.get(API_URL % coin, timeout=2)
    price = int(resp.json()["USD"])
    return price

def output_price(coin, price, show_icons, online, show_state, show_name):
    PRE = ""
    POST = ""
    if show_icons: PRE += ICONS[coin]
    if show_name: PRE += f" {coin} "
    if show_state:
        POST = "  " if online else "  "
    print(f"{PRE}${price}{POST}")

@argh.arg("--coin", "-c", help="which coin to check")
@argh.arg("--icons", "-i", help="display coin icon")
@argh.arg("--state", "-s", help="display whether the information is from online or offline")
@argh.arg("--name", "-n", help="display coin name")
def run(coin="BTC", icons=False, state=False, name=False):
    try:
        price = get_price(coin)
    except Exception:
        if os.path.isfile(f"{CACHE_FILE}.{coin}"):
            with open(f"{CACHE_FILE}.{coin}", "r") as f:
                output_price(coin, f.read(), icons, False, state, name)
        else:
            print(" ")
    else:
        output_price(coin, price, icons, True, state, name)
        with open(f"{CACHE_FILE}.{coin}", "w") as f:
            f.write(str(price))

if __name__ == "__main__":
    argh.dispatch_command(run)

